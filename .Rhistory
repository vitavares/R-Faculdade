rm(list = ls())
library(dslabs)
data("murders")
?murders
# Citação para o R
citation()
# site dos dados:
# https://en.wikipedia.org/wiki/Gun_violence_in_the_United_States_by_state
# Variáveis: Número de assassinatos por arma de fogo ocorridos nos EUA em 2010;
#            Estados onde foram registrados os assassinatos;
#            Regiões as quais cada Estado pertence;
#            População de cada Estado.
# tipo de variável, respectivamente: Quantitativa discreta;
#                                    Qualitativa Nominal;
#                                    Qualitativa Nominal;
#                                    Quantitativa discreta.
# Como ocorreu a coleta dos dados: As taxas de homicídio foram calculadas
# com base nos Relatórios Uniformes de Crimes do FBI e na população estimada
# do censo de cada estado.
colnames(murders) = c('estado', 'sigla', 'regiao', 'populacao', 'assassinatos')
str(murders)
dim(murders)
attach(murders)
# Algumas medidas descritivas
summary(murders[,3:5])
f = function(x){
c('desvio padrão'= sd(x), 'CV' = sd(x)/mean(x)*100)
}
f(assassinatos); f(populacao)
# Alguns gráficos para a variável assassinatos
g1 = boxplot(assassinatos, main = 'Boxplot: assassinatos por arma de fogo',
xlab = 'Número de assassinatos', horizontal = TRUE, col = 'lightgreen')
abline(v = g1$stats, lty = 2)
g1$out # Outliers do boxplot
subset(murders, assassinatos >= 669 & assassinatos <= 1257)
g2 = hist(assassinatos, main = 'Histograma: Assassinatos por arma de fogo',
ylab = 'Densidade', xlab = 'Número de assassinatos', freq = FALSE,
col = 'lightblue', border = 'darkblue')
library(moments) # Coeficientes para a distribuição dos dados
skewness(g2$density) # Assimetria à direita -> coef. de assimetria > 0
kurtosis(g2$density) # Distribuição dos dados platicúrtica -> coef. de curtose > 0,263
# Gráfico que imcorpora as três variáveis
b = xtabs((assassinatos/populacao)*100~regiao)
barplot(b, ylab = '% percentual de assassinatos',
main = 'Gráfico de barras: percentual de assassinatos por região', xlab = 'Região',
col = rainbow(4))
# Gráficos para assassinatos por região
tab1 = xtabs((assassinatos/sum(assassinatos))*100~regiao)
pie(tab1,round(tab1, 1),
radius = 1, main = 'Gráfico de setores: assassinatos X região',
col = rainbow(15))
legend('topleft', legend = c('Nordeste', 'Sul', 'Norte Central', 'Oeste'),
fill = rainbow(15), cex = 0.6)
a = tapply(assassinatos, INDEX = regiao, c) # Análise sobre correlação
boxplot(a, col = rainbow(4), ylab = 'número de assassinatos',
main = 'Boxplot comparativo: assassinatos por região',
xlab = 'Região')
if(sum(aggregate(assassinatos~regiao, murders, var)[,2]*aggregate(assassinatos~regiao, murders, length)[,2])/sum(aggregate(assassinatos~regiao, murders, length)[,2]) > var(assassinatos)){
print('A variável qualitativa não melhora a previsão de assassinatos')
} else{print('A variável qualitativa melhora a previsão de assassinatos')}
# A Região de procedência não melhora a previsão de assassinatos
# Gráfico de dispersão e coeficiente de correlação para as variáveis
# assassinatos e população
plot(assassinatos, populacao, main = 'Gráfico de disperção: Assassinatos X População',
xlab = 'Assassinatos', ylab = 'População', pch = 1)
abline(lm(populacao~assassinatos))
cor(assassinatos, populacao, method = 'pearson') # Correlação direta forte
# Gráfico de dispersão e coeficiente de correlação
library(ggplot2)
plot(assassinatos, populacao, main = 'Gráfico de disperção: Assassinatos X População',
xlab = 'Assassinatos', ylab = 'População', pch = 1)
abline(lm(populacao~assassinatos))
cor(assassinatos, populacao, method = 'pearson') # Correlação direta forte
ggplot(murders, aes(y = populacao, x = assassinatos)) +
geom_point() +
geom_smooth(method = "lm",color = "red") +
labs(subtitle = "Gráfico de dispersão",
y = "População", x = "Assassinatos",
caption = "Fonte: https://en.wikipedia.org/wiki/Gun_violence_in_the_United_States_by_state")
plot(assassinatos, populacao, main = 'Gráfico de disperção: Assassinatos X População',
xlab = 'Assassinatos', ylab = 'População', pch = 1)
abline(lm(populacao~assassinatos))
cor(assassinatos, populacao, method = 'pearson') # Correlação direta forte
# Gráfico de dispersão e intervalo de confiança
ggplot(murders, aes(y = populacao, x = assassinatos)) +
geom_point() +
geom_smooth(method = "lm",color = "red") +
labs(subtitle = "Gráfico de dispersão",
y = "População", x = "Assassinatos",
caption = "Fonte: https://en.wikipedia.org/wiki/Gun_violence_in_the_United_States_by_state")
library(ggplot2)
ggplot(murders, aes(y = populacao, x = assassinatos, shape = regiao)) +
geom_point(aes(col = regiao), shape = 16) +
labs(subtitle = "Gráfico de dispersão",
y = "População", x = "Assassinatos",
caption = "Fonte: https://en.wikipedia.org/wiki/Gun_violence_in_the_United_States_by_state") +
scale_y_continuous(labels = comma_format()) +
scale_x_continuous(labels = comma_format())
library(scales)
ggplot(murders, aes(y = populacao, x = assassinatos, shape = regiao)) +
geom_point(aes(col = regiao), shape = 16) +
labs(subtitle = "Gráfico de dispersão",
y = "População", x = "Assassinatos",
caption = "Fonte: https://en.wikipedia.org/wiki/Gun_violence_in_the_United_States_by_state") +
scale_y_continuous(labels = comma_format()) +
scale_x_continuous(labels = comma_format())
# Lista 3
rm(list = ls())
# Questão 1
x = c(2,3,5)
y = c(4,9,16)
a1 = sum(x)
a2 = sum(x^2)
a3 = sum(x)^2
b1 = prod(x)
b2 = prod(y/x)
b3 = prod(sqrt(y))
# Questão 2
f = function(x){
n = length(x)
if(n>1){
c(sqrt((sum(x^2) - (sum(x)^2)/n)/(n-1)),
sqrt((sum((x-mean(x))^2))/(n-1)),
sqrt((sum(x^2) - n*(mean(x)^2))/(n-1)))
}
}
# Questão 3
f = function(x){
n = length(x)
if(n>1){
c('média' = mean(x), 'dp' = sd(x), 'cv' = sd(x)/mean(x)*100)
}
}
# Questão 4
f = function(x){
n = length(x)
if(n > 1 & n <= 20 & all(x < 10) & all(x >= -10)){
sqrt((sum(x^2) - n*(mean(x)^2))/(n-1))
} else{
print('Vetor de dados não adequado')}
}
# Questão 5
f = function(x){
n = length(x)
if(n > 4 & n < 21 & all(x >= -10) & all(x < 10)){
(sum(abs(x)^3) - (prod(x)^2)/sqrt(n))/(log10(n) + gamma(n))
} else{print('Vetor de dados não adequado')}
}
# Questão 6
f = function(x, y, type){
n = length(x)
if(n > 1){
switch (type, 'diag_dispercao' = plot(x, y, main = 'Diagrama de disperção', pch = 19),
'expresao' = c('->Fórmula dada' = (sum(x*y) - n*mean(x)*mean(y))/sqrt((sum(x^2) - n*(mean(x)^2))*(sum(y^2) - n*(mean(y)^2))),
'->Coeficiente de correlação' = cor(x, y, method = 'pearson')))
}
}
# 6a
X = c(60, 65, 71, 69, 76, 71, 79, 90, 94, 92); Y = c(61, 62, 64, 68, 70, 67, 75, 76, 81, 82)
f(X, Y, type = 'diag_dispercao')
f(X, Y, type = 'expresao')
# 6b
X = c(60, 65, 71, 64, 76, 71, 79, 86, 94, 92); Y = c(79, 77, 76, 78, 75, 76, 75, 76, 78, 79)
f(X, Y, type = 'diagrama_dispercao')
f(X, Y, type = 'expresao')
# 6c
X = c(75, 79, 69, 64, 76, 71, 81, 86, 91, 85); Y = c(79, 77, 76, 78, 75, 76, 75, 76, 78, 79)
f(X, Y, type = 'diagrama_dispercao')
f(X, Y, type = 'expresao')
# Questão 7
rm(list = ls())
if(n > 1){
switch (type, 'diagrama_dispercao' = plot(x, y, main = 'Diagrama de disperção', pch = 19),
'expresao' = c('->Fórmula dada' = (sum(x*y) - n*mean(x)*mean(y))/sqrt((sum(x^2) - n*(mean(x)^2))*(sum(y^2) - n*(mean(y)^2))),
'->Coeficiente de correlação' = cor(x, y, method = 'pearson')))
}
# Questão 6
f = function(x, y, type){
n = length(x)
if(n > 1){
switch (type, 'diagrama_dispercao' = plot(x, y, main = 'Diagrama de disperção', pch = 19),
'expresao' = c('->Fórmula dada' = (sum(x*y) - n*mean(x)*mean(y))/sqrt((sum(x^2) - n*(mean(x)^2))*(sum(y^2) - n*(mean(y)^2))),
'->Coeficiente de correlação' = cor(x, y, method = 'pearson')))
}
}
# 6a
X = c(60, 65, 71, 69, 76, 71, 79, 90, 94, 92); Y = c(61, 62, 64, 68, 70, 67, 75, 76, 81, 82)
f(X, Y, type = 'diagrama_dispercao')
f(X, Y, type = 'expresao')
# 6b
X = c(60, 65, 71, 64, 76, 71, 79, 86, 94, 92); Y = c(79, 77, 76, 78, 75, 76, 75, 76, 78, 79)
f(X, Y, type = 'diagrama_dispercao')
f(X, Y, type = 'expresao')
# 6c
X = c(75, 79, 69, 64, 76, 71, 81, 86, 91, 85); Y = c(79, 77, 76, 78, 75, 76, 75, 76, 78, 79)
f(X, Y, type = 'diagrama_dispercao')
f(X, Y, type = 'expresao')
# Questão 7
rm(list = ls())
# Exemplo de associação linear direta entre as variáveis X: anos de serviço e
# Y: número de clientes de agentes de uma companhia de seguros
anos_servico = c(2,3,4,5,4,6,7,8,8,10)
numero_clientes = c(48,50,56,52,43,60,62,58,64,72)
plot(anos_servico, numero_clientes, pch = 19, main = 'Diagrama de disperção para
as variáveis X: anos de serviço e Y: número de clientes',
xlab = 'anos de serviço', ylab = 'núimero de clientes')
cor(anos_servico, numero_clientes, method = 'pearson')
l
cor(renda_bruta, gasto_saude, method = 'pearson')
# Associação linear inversa
renda_bruta = c(12,16,18,20,28,30,40,48,50,54)
gasto_saude = c(7.2,7.4,7.0,6.5,6.6,6.7,6.0,5.6,6.0,5.5)
plot(renda_bruta, gasto_saude, pch = 19, main = 'Renda bruta Gasto com saúde',
xlab = 'renda bruta', ylab = '% gasto com saúde')
cor(anos_servico, numero_clientes, method = 'pearson')
cor(anos_servico, numero_clientes, method = 'pearson')
cor(anos_servico, numero_clientes, method = 'pearson')
cor(anos_servico, numero_clientes, method = 'pearson')
# Associação linear inversa
# Associação linear direta
anos_servico = c(2,3,4,5,4,6,7,8,8,10)
numero_clientes = c(48,50,56,52,43,60,62,58,64,72)
plot(anos_servico, numero_clientes, pch = 19, main = 'Anos de serviço Número de clientes',
xlab = 'Anos de serviço', ylab = 'Núimero de clientes')
cor(anos_servico, numero_clientes, method = 'pearson')
# Associação linear inversa
renda_bruta = c(12,16,18,20,28,30,40,48,50,54)
gasto_saude = c(7.2,7.4,7.0,6.5,6.6,6.7,6.0,5.6,6.0,5.5)
plot(renda_bruta, gasto_saude, pch = 19, main = 'Renda bruta X Gasto com saúde',
xlab = 'Renda bruta', ylab = 'Gasto com saúde %')
cor(renda_bruta, gasto_saude, method = 'pearson')
# Não associação linear
resultado_teste = c(45,52,61,70,74,76,80,90)
tempo_operacao = c(343,368,355,334,337,381,345,375)
plot(f2, main = 'Figura 1 - Curvas da densidade normal',
ylab = 'densidade', xlab = '', xlim = c(100, 900),
lwd = 2,xaxp = c(100,900,8))
axis(side = 1, xaxp = c(200,800,3), lwd = 2)
f1 = function(x) dnorm(x, 500, 100)
f2 = function(x) dnorm(x, 500, 50)
plot(f2, main = 'Figura 1 - Curvas da densidade normal',
ylab = 'densidade', xlab = '', xlim = c(100, 900),
lwd = 2,xaxp = c(100,900,8))
# Questão 9
rm(list = ls())
set.seed(256)
amostra = rnorm(1000, 500, 50)
f = function(x)dnorm(x, 500, 50)
hist(amostra, main = 'Figura 2 - Distribuição Normal: histograma e densidade',
ylab = 'densidade', xaxp = c(300, 700, 4),xlab = '', border = 'blue',
col = 'lightblue', freq = FALSE, ylim = c(0, 0.008))
curve(f, add = TRUE)
# Questão 10
rm(list = ls())
library(dslabs)
data(murders)
attach(murders)
xtabs(total/sum(total)*100~state)
Gb = boxplot(total, horizontal = TRUE, xlab = 'Quantidade de assassinatos',
main = 'Figura 3 - Boxplot para a variável assassinatos por arma de fogo',
col = 'lightgreen', lwd = 1.8)
abline(v = Gb$stats, lty = 2)
detach(murders)
