setwd("~/workspace/R-Faculdade")
porosidade = c(19.8, 20.0, 21.0, 21.1, 21.2, 21.5, 21.6, 21.7, 21.8, 21.8, 21.9, 22.0, 22.1, 22.1, 22.1, 22.2, 22.3, 22.3, 22.3, 22.3, 22.4, 22.4, 22.4, 22.5, 22.6, 22.6, 22.8, 23.0, 23.0, 23.1, 23.2, 23.3, 23.5, 23.7, 23.7, 23.7, 23.8, 23.9, 23.9, 23.9, 24.0, 24.1, 24.2, 24.2, 24.4, 24.9, 25.0, 25.2, 25.3, 25.3, 25.6, 26.0, 27.9, 27.3, 28.6)
freq = table(porosidade)
freq
porosidade = order(c(19.8, 20.0, 21.0, 21.1, 21.2, 21.5, 21.6, 21.7, 21.8, 21.8, 21.9, 22.0, 22.1, 22.1, 22.1, 22.2, 22.3, 22.3, 22.3, 22.3, 22.4, 22.4, 22.4, 22.5, 22.6, 22.6, 22.8, 23.0, 23.0, 23.1, 23.2, 23.3, 23.5, 23.7, 23.7, 23.7, 23.8, 23.9, 23.9, 23.9, 24.0, 24.1, 24.2, 24.2, 24.4, 24.9, 25.0, 25.2, 25.3, 25.3, 25.6, 26.0, 27.9, 27.3, 28.6))
freq = table(porosidade)
freq
porosidade = c(19.8, 20.0, 21.0, 21.1, 21.2, 21.5, 21.6, 21.7, 21.8, 21.8, 21.9, 22.0, 22.1, 22.1, 22.1, 22.2, 22.3, 22.3, 22.3, 22.3, 22.4, 22.4, 22.4, 22.5, 22.6, 22.6, 22.8, 23.0, 23.0, 23.1, 23.2, 23.3, 23.5, 23.7, 23.7, 23.7, 23.8, 23.9, 23.9, 23.9, 24.0, 24.1, 24.2, 24.2, 24.4, 24.9, 25.0, 25.2, 25.3, 25.3, 25.6, 26.0, 27.9, 27.3, 28.6)
freq = table(gather(porosidade))
library(tidyr)
install.packages("tidyr")
library(tidyr)
porosidade = c(19.8, 20.0, 21.0, 21.1, 21.2, 21.5, 21.6, 21.7, 21.8, 21.8, 21.9, 22.0, 22.1, 22.1, 22.1, 22.2, 22.3, 22.3, 22.3, 22.3, 22.4, 22.4, 22.4, 22.5, 22.6, 22.6, 22.8, 23.0, 23.0, 23.1, 23.2, 23.3, 23.5, 23.7, 23.7, 23.7, 23.8, 23.9, 23.9, 23.9, 24.0, 24.1, 24.2, 24.2, 24.4, 24.9, 25.0, 25.2, 25.3, 25.3, 25.6, 26.0, 27.9, 27.3, 28.6)
freq = table(gather(porosidade))
gather(porosidade)
porosidade = sort(c(19.8, 20.0, 21.0, 21.1, 21.2, 21.5, 21.6, 21.7, 21.8, 21.8, 21.9, 22.0, 22.1, 22.1, 22.1, 22.2, 22.3, 22.3, 22.3, 22.3, 22.4, 22.4, 22.4, 22.5, 22.6, 22.6, 22.8, 23.0, 23.0, 23.1, 23.2, 23.3, 23.5, 23.7, 23.7, 23.7, 23.8, 23.9, 23.9, 23.9, 24.0, 24.1, 24.2, 24.2, 24.4, 24.9, 25.0, 25.2, 25.3, 25.3, 25.6, 26.0, 27.9, 27.3, 28.6))
gather(porosidade)
freq = table(porosidade)
freq
numeros <- c(19.8, 20.0, 21.0, 21.1, 21.2, 21.5, 21.6, 21.7, 21.8, 21.8,
21.9, 22.0, 22.1, 22.1, 22.1, 22.2, 22.3, 22.3, 22.3, 22.3,
22.4, 22.4, 22.4, 22.5, 22.6, 22.6, 22.8, 23.0, 23.0, 23.1,
23.2, 23.3, 23.5, 23.7, 23.7, 23.7, 23.8, 23.9, 23.9, 23.9,
24.0, 24.1, 24.2, 24.2, 24.4, 24.9, 25.0, 25.2, 25.3, 25.3,
25.6, 26.0, 27.9, 27.3, 28.6)
# Definir os intervalos desejados
intervalos <- c(19.8, 21, 22, 23, 24, 25, 26, 27, 28, 29)
# Agrupar os números nos intervalos
grupos <- cut(numeros, breaks = intervalos, right = FALSE, include.lowest = TRUE)
# Criar a tabela de frequência
tabela_frequencia <- table(grupos)
# Imprimir a tabela de frequência
print(tabela_frequencia)
tabela_porcentagem <- prop.table(tabela_frequencia) * 100
tabela_porcentagem
tabela_porcentagem
dim(numeros)
summary(numeros)
tabela_porcentagem
?round
tabela_porcentagem <- round(prop.table(tabela_frequencia) * 100)
tabela_porcentagem
sum(tabela_porcentagem)
# Questão 2
intervalos2 = c(0,2,4,6,8,10)
numeros <- c(19.8, 20.0, 21.0, 21.1, 21.2, 21.5, 21.6, 21.7, 21.8, 21.8,
21.9, 22.0, 22.1, 22.1, 22.1, 22.2, 22.3, 22.3, 22.3, 22.3,
22.4, 22.4, 22.4, 22.5, 22.6, 22.6, 22.8, 23.0, 23.0, 23.1,
23.2, 23.3, 23.5, 23.7, 23.7, 23.7, 23.8, 23.9, 23.9, 23.9,
24.0, 24.1, 24.2, 24.2, 24.4, 24.9, 25.0, 25.2, 25.3, 25.3,
25.6, 26.0, 27.9, 27.3, 28.6)
intervalos <- c(19.8, 21, 22, 23, 24, 25, 26, 27, 28, 29)
grupos <- cut(numeros, breaks = intervalos, right = FALSE, include.lowest = TRUE)
tabela_frequencia <- table(grupos)
tabela_porcentagem <- round(prop.table(tabela_frequencia) * 100)
tabela_porcentagem
# Questão 2
intervalos2 = c(0,2,4,6,8,10)
# Questão 2
intervalos2 = c(0,2,4,6,8,10)
cut
# Questão 2
notas_antes = c(420,215,127,15,5)
intervalos2 = c(0,2,4,6,8,10)
notas = cut(notas_antes, breaks = intervalos2, right = F, include.lowest = T)
notas
notas_table = table(notas)
notas_table
# Questão 2
classes = c('0 |- 2', '2 |- 4', '4 |- 6', '6 |- 8', '8 |- 10')
FAT = c(420,215,127,15,5)
FDT = c(95,152,373,137,25)
treinamento = data.frame(classes, FAT, FDT)
treinamento
# Questão 2
classes = c('0 |- 2', '2 |- 4', '4 |- 6', '6 |- 8', ' 8 |- 10')
FAT = c(420,215,127,15,5)
FDT = c(95,152,373,137,25)
treinamento = data.frame(classes, FAT, FDT)
treinamento
View(treinamento)
# Questão 2
classes = c('0 |- 2', '2 |- 4', '4 |- 6', '6 |- 8', '8 |- 10')
FAT = c(420,215,127,15,5)
FDT = c(95,152,373,137,25)
treinamento = data.frame(classes, FAT, FDT)
hist(c(classes, FAT))
attach(treinamento)
hist(c(classes, FAT))
hist(tabela_frequencia
)
numeros <- c(19.8, 20.0, 21.0, 21.1, 21.2, 21.5, 21.6, 21.7, 21.8, 21.8,
21.9, 22.0, 22.1, 22.1, 22.1, 22.2, 22.3, 22.3, 22.3, 22.3,
22.4, 22.4, 22.4, 22.5, 22.6, 22.6, 22.8, 23.0, 23.0, 23.1,
23.2, 23.3, 23.5, 23.7, 23.7, 23.7, 23.8, 23.9, 23.9, 23.9,
24.0, 24.1, 24.2, 24.2, 24.4, 24.9, 25.0, 25.2, 25.3, 25.3,
25.6, 26.0, 27.9, 27.3, 28.6)
intervalos <- c(19.8, 21, 22, 23, 24, 25, 26, 27, 28, 29)
grupos <- cut(numeros, breaks = intervalos, right = FALSE, include.lowest = TRUE)
tabela_frequencia <- table(grupos)
tabela_porcentagem <- round(prop.table(tabela_frequencia) * 100)
tabela_porcentagem
hist(tabela_frequencia)
detach(treinamento)
detach(treinamento)
# Questão 2
# Dados das frequências absolutas antes e depois do treinamento
FAT <- c(420, 215, 127, 15, 5)
FDT <- c(95, 152, 373, 137, 25)
# Limites das classes
limites <- c(0, 2, 4, 6, 8, 10)
# Criar os intervalos de classe
intervalos <- paste(limites[-length(limites)], limites[-1], sep = "-")
# Construir o histograma antes do treinamento
hist(FAT, breaks = limites, main = "Histograma - Antes do Treinamento", xlab = "Pontuação", ylab = "Frequência", col = "blue", border = "white", xlim = c(0, 10), ylim = c(0, max(FAT, FDT)))
# Adicionar rótulos de frequência nas barras
text(FAT, pos = 3, labels = FAT, col = "black")
# Construir o histograma depois do treinamento
# Questão 2
# Dados das frequências absolutas antes e depois do treinamento
FAT <- c(420, 215, 127, 15, 5)
FDT <- c(95, 152, 373, 137, 25)
# Limites das classes
limites <- c(0, 2, 4, 6, 8, 10)
# Limites das classes
limites <- c(0, 2, 4, 6, 8, 10)
# Criar os intervalos de classe
intervalos <- paste(limites[-length(limites)], limites[-1], sep = "-")
# Construir o histograma antes do treinamento
hist(FAT, breaks = limites, main = "Histograma - Antes do Treinamento", xlab = "Pontuação", ylab = "Frequência", col = "blue", border = "white", xlim = c(0, 10), ylim = c(0, max(FAT, FDT)))
# Construir o histograma antes do treinamento
hist(FAT, breaks = limites, main = "Histograma - Antes do Treinamento", xlab = "Pontuação", ylab = "Frequência", col = "blue", border = "white", xlim = c(0, 10), ylim = c(0, max(FAT, FDT)))
# Questão 2
# Dados das frequências absolutas antes e depois do treinamento
FAT <- c(420, 215, 127, 15, 5)
FDT <- c(95, 152, 373, 137, 25)
# Limites das classes
limites <- c(0, 2, 4, 6, 8, 10)
# Criar os intervalos de classe
intervalos <- paste(limites[-length(limites)], limites[-1], sep = "-")
# Construir o histograma antes do treinamento
hist(FAT, breaks = c(limites, max(FAT) + 1), main = "Histograma - Antes do Treinamento", xlab = "Pontuação", ylab = "Frequência", col = "blue", border = "white", xlim = c(0, 10), ylim = c(0, max(FAT, FDT)))
# Adicionar rótulos de frequência nas barras
text(FAT, pos = 3, labels = FAT, col = "black")
# Construir o histograma depois do treinamento
hist(FDT, breaks = c(limites, max(FDT) + 1), main = "Histograma - Depois do Treinamento", xlab = "Pontuação", ylab = "Frequência", col = "red", border = "white", xlim = c(0, 10), ylim = c(0, max(FAT, FDT)))
# Adicionar rótulos de frequência nas barras
text(FDT, pos = 3, labels = FDT, col = "black")
# Dados das frequências absolutas antes e depois do treinamento
FAT <- c(420, 215, 127, 15, 5)
FDT <- c(95, 152, 373, 137, 25)
# Limites das classes
limites <- c(0, 2, 4, 6, 8, 10)
# Criar os intervalos de classe
intervalos <- paste(limites[-length(limites)], limites[-1], sep = "-")
# Plotar o histograma antes do treinamento
barplot(FAT, names.arg = intervalos, main = "Histograma - Antes do Treinamento", xlab = "Pontuação", ylab = "Frequência", col = "blue")
# Plotar o histograma depois do treinamento
barplot(FDT, names.arg = intervalos, main = "Histograma - Depois do Treinamento", xlab = "Pontuação", ylab = "Frequência", col = "red")
